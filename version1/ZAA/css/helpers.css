.draggable {
	cursor: pointer;
}
.dropzone {
	cursor: grab;
}

.editableText {
	background-color: transparent;
	outline: none;
	border: none;
	text-align: center;
	padding: 2px 8px;
}

.frameOnHover:hover {
	opacity: 0.8;
	/* border: solid 1px yellow; */
}
.frameOnHover:active {
	opacity: 0.5;
	/* border: solid 1px yellow; */
}
.framedPicture {
	/* border: solid 8px yellow; */
	outline: solid 8px yellow;
	outline-offset: -6px;
	/* border-radius: 0px; GEHT NICHT!!! */
}

.linebreak {
	flex-basis: 100%;
	height: 0px;
	/* height: 10px; */
	/* background-color: red; */
}
.flexWrap {
	display: flex;
	flex: 1;
	flex-wrap: wrap;
	justify-content: center;
	align-content: flex-start; /* das ist bei den meisten nicht so gewesen! */
}
.justifyLeft {
	justify-content: flex-start;
}
.maxLines2 {
	overflow: hidden;
	text-overflow: ellipsis;
	display: -webkit-box;
	-webkit-line-clamp: 2; /* number of lines to show */
	-webkit-box-orient: vertical;
}
.truncate {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}
.truncate:hover {
	/* font-size: 8pt; */
	cursor: none;
	white-space: normal;
	overflow: visible;
	background: white;
	border-radius: 4px;
	color: black;
	/* filter: invert(100%);	 */
	z-index: 100;
	/* height: 100px; */
	position: relative;
}

.might-overflow {
	cursor: default;
	text-overflow: ellipsis;
	overflow: hidden;
	white-space: nowrap;
}
.might-overflow:hover {
	cursor: default;
	text-overflow: clip;
	white-space: normal;
	/* word-break: break-all; */
}

/* #region centering */
.centeredTL {
	position: relative;
	top: 50%;
	left: 50%;
}
.centered {
	position: relative;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}
.centerCentered {
	margin: 0;
	position: absolute;
	top: 50%;
	left: 50%;
	margin-right: -50%;
	transform: translate(-50%, -50%);
}
.centerCenteredTopHalf {
	margin: 0;
	position: absolute;
	top: 50%;
	left: 50%;
	margin-right: -50%;
	transform: translate(-50%, -100%);
}
.centerCenteredBottomHalf {
	margin: 0;
	position: absolute;
	top: 46%;
	left: 50%;
	margin-right: -50%;
	transform: translate(-50%, 0%);
}
/* #endregion */

/* #region animations */
@keyframes breath {
	0% {
		background: var(--colorStart);
		transform: scale(var(--scaleStart));
	}
	100% {
		background: var(--colorEnd);
		transform: scale(var(--scaleEnd));
	}
}
.container {
	--colorStart: #222;
	--colorEnd: #eee;
	color: var(--colorEnd);
	--xStart: 0px;
	--xEnd: 200px;
	--yStart: 0px;
	--yEnd: 200px;
}
.bubble2 {
	/* each bubble starts with these common specs: */
	/* --scaleStart: 0.3; */
	/* position: absolute; */
	/* left: var(--xStart); */
	transform: translate(var(--xStart),var(--yStart));
	/* animation: breath2 2s alternate infinite ease-in-out; */
	animation: breath2 2s forwards ease-in-out;
}
@keyframes breath2 {
	0% {
		transform: translate(var(--xStart),var(--yStart));
	}
	100% {
		transform: translate(var(--xEnd),var(--yEnd));
	}
}

.bubble1 {
	/* each bubble starts with these common specs: */
	--scaleStart: 0.3;
	position: absolute;
	left: var(--xStart);
	/* transform: scale(var(--scaleStart)); */
	animation: breath1 2s alternate infinite ease-in-out;
}
@keyframes breath1 {
	0% {
		left: var(--xStart);
		/* transform: scale(var(--scaleStart)); */
	}
	100% {
		left: var(--xEnd);
		/* transform: scale(var(--scaleEnd)); */
	}
}
.bubble {
	/* each bubble starts with these common specs: */
	--scaleStart: 0.3;
	background: var(--colorStart);
	transform: scale(var(--scaleStart));
	-webkit-animation: breath 2s alternate infinite ease-in-out;
	animation: breath 2s alternate infinite ease-in-out;
}
.container {
	display: flex;
	align-items: center;
	justify-content: center;
	min-height: 100vh;
	max-width: 100vw;
}

.bubble {
	margin: 1rem;
	width: 2.5rem;
	height: 2.5rem;
	border-radius: 50%;
}

body {
	--xStart: 0;
	--xEnd: 100;
}
.canimove {
	animation: animove 2s alternate infinite ease-in-out;
}
@keyframes animove {
	0% {
		/* background: var(--colorStart); */
		transform: translateX(var(--xStart));
	}
	100% {
		/* background: var(--colorEnd); */
		transform: translateX(var(--xEnd));
	}
}

/* #endregion animations */
